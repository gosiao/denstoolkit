#!/bin/bash
thisScriptName=$(echo "$0" | sed -e 's;\(.*\)/\(.*\);\2;')
usage()
{
echo -e "\n    usage: \033[1m$1 [option [value(s)]] ... [option [value(s)]]\033[0m"
cat << END_USAGE_TEXT

This script computes the NCI field and makes two cubes, and one plot
(s vs rho), which can be used to refine the cubes (by selecting
appropriate cutoffs for rho and s). The script also generates
VMD scripts that automatically loads and visualizes the 
NCI index.

Options 
  -h           Displays the help menu.
  -w wf?name   Sets the wavefunction name to be 'wf?name' (wfxname/wfnname)
  -c "a1 a2"     Centres the cube to be at the midpoint between atoms a1 and
                 a2. Please mind the quotes to set a1 and a2.
  -P           Plot again the figures without re-computing cubes.
                 The option forces to skip cubes calculation without asking.
  -l palname   Select the palette to draw the plot s vs Lambda_2. The
                 following palettes are available (default palname=defgnp):
                   defgnu (a default palette using rgbformulae), magma,
                   oranges, rdbu, viridis
                   You may get other palettes from:
                      https://github.com/Gnuplotting/gnuplot-palettes
  -L        	Writes cpu time, input/output information etc. on a log file
  -n  dim   	Sets the number of points per direction for the cube
            	  to be dim x dim x dim.
  -s        	Uses a smart cuboid for the grid. The number of points for the
            	  largest direction will be 80.
  -S ln     	Uses a smart cuboid for the grid. ln is the number of points
            	  the largest axis will have. The remaining axes will have
            	  a number of points proportional to its length.
  -r rmin      Sets the lower rho cutoff to be rmin
  -R rmax      Sets the upper rho cutoff to be rmax
  -G smax      Sets the upper reduced density gradient (s) cutoff to be smax
  -q           Adds 'quiet' to the vmd script (closes vmd after rendering)


END_USAGE_TEXT
}
#
print_vmd_script(){
   the_rho_file_name=$1
   the_red_grad_file_name=$2
   the_red_grad_value=$3
   the_rho_value=$4
   the_tga_file_name="$5"
cat << END_VMD_SCRIPT
#!/usr/local/bin/vmd

#VMD script written by save_state Revision: 1.41 $
#VMD version: 1.8.6
set viewplist
set fixedlist
# Display settings
display projection Orthographic
display nearclip set 0.000000
display depthcue Off
color Display Background white
axes location Off
# load new molecule
mol new $the_red_grad_file_name type cube first 0 last -1 step 1 filebonds 1 autobonds 1 waitfor all
mol addfile $the_rho_file_name type cube first 0 last -1 step 1 filebonds 1 autobonds 1 waitfor all
#
# representation of the atoms
mol delrep 0 top
mol representation CPK 1.000000 0.600000 118.000000 131.000000
mol color Name
mol selection {all}
mol material Opaque
mol addrep top
#
# add representation of the surface
mol representation Isosurface $the_red_grad_value 1 0 0 1 1
#The following line chooses the first (0) cube to be coloured with volume representation.
mol color Volume 0
mol selection {all}
mol material Opaque
mol addrep top
mol selupdate 1 top 0
mol colupdate 1 top 0
mol scaleminmax top 1 -$the_rho_value $the_rho_value
mol smoothrep top 1 0
mol drawframes top 1 {now}
color scale method RGB
set colorcmds {{color Name {C} gray}}
#some more

render TachyonInternal $the_tga_file_name

END_VMD_SCRIPT
}
#computes the cube files.
compute_cubes() {
   the_wf_file_name="$1"
   the_cube_args="$2"
   the_limits_of_compute_cubes="$3"
   echo "####################################"
   echo -e "\tStarting NCI cube evaluation"
   echo "####################################"
   #computes NCI--Rho
   launcher1="dtkcube $the_wf_file_name $the_cube_args -p z $the_limits_of_compute_cubes"
   echo $launcher1
   $launcher1
   #computes NCI--RedGrad
   launcher2="dtkcube $the_wf_file_name $the_cube_args -p Z $the_limits_of_compute_cubes"
   echo $launcher2
   $launcher2
}
#Prints all values of a cube as a single column
cube_to_column(){
   cube_file="$1"
   let number_of_atoms=$(sed -n '3p' "$cube_file"| awk '{print $1;}')+6
   awk '{if (NR>'$number_of_atoms'){print $0;}}' $cube_file | awk '$1=$1'|tr [:space:] "\n"
}
#kmortemp palette
print_kmoreland_palette() {
cat << EOFMarker
set palette defined(\
   0       0.2314  0.2980  0.7529,\
   0.03125 0.2667  0.3529  0.8000,\
   0.0625  0.3020  0.4078  0.8431,\
   0.09375 0.3412  0.4588  0.8824,\
   0.125   0.3843  0.5098  0.9176,\
   0.15625 0.4235  0.5569  0.9451,\
   0.1875  0.4667  0.6039  0.9686,\
   0.21875 0.5098  0.6471  0.9843,\
   0.25    0.5529  0.6902  0.9961,\
   0.28125 0.5961  0.7255  1.0000,\
   0.3125  0.6392  0.7608  1.0000,\
   0.34375 0.6824  0.7882  0.9922,\
   0.375   0.7216  0.8157  0.9765,\
   0.40625 0.7608  0.8353  0.9569,\
   0.4375  0.8000  0.8510  0.9333,\
   0.46875 0.8353  0.8588  0.9020,\
   0.5     0.8667  0.8667  0.8667,\
   0.53125 0.8980  0.8471  0.8196,\
   0.5625  0.9255  0.8275  0.7725,\
   0.59375 0.9451  0.8000  0.7255,\
   0.625   0.9608  0.7686  0.6784,\
   0.65625 0.9686  0.7333  0.6275,\
   0.6875  0.9686  0.6941  0.5804,\
   0.71875 0.9686  0.6510  0.5294,\
   0.75    0.9569  0.6039  0.4824,\
   0.78125 0.9451  0.5529  0.4353,\
   0.8125  0.9255  0.4980  0.3882,\
   0.84375 0.8980  0.4392  0.3451,\
   0.875   0.8706  0.3765  0.3020,\
   0.90625 0.8353  0.3137  0.2588,\
   0.9375  0.7961  0.2431  0.2196,\
   0.96875 0.7529  0.1569  0.1843,\
   1       0.7059  0.0157  0.1490\
)
EOFMarker
}
#inverted kmortemp palette
print_invkmortemp_palette(){
cat <<EOFMarker
set palette defined(\
   0       0.7059 0.0157 0.1490,\
   0.03125 0.7529 0.1569 0.1843,\
   0.0625  0.7961 0.2431 0.2196,\
   0.09375 0.8353 0.3137 0.2588,\
   0.125   0.8706 0.3765 0.3020,\
   0.15625 0.8980 0.4392 0.3451,\
   0.1875  0.9255 0.4980 0.3882,\
   0.21875 0.9451 0.5529 0.4353,\
   0.25    0.9569 0.6039 0.4824,\
   0.28125 0.9686 0.6510 0.5294,\
   0.3125  0.9686 0.6941 0.5804,\
   0.34375 0.9686 0.7333 0.6275,\
   0.375   0.9608 0.7686 0.6784,\
   0.40625 0.9451 0.8000 0.7255,\
   0.4375  0.9255 0.8275 0.7725,\
   0.46875 0.8980 0.8471 0.8196,\
   0.5     0.8667 0.8667 0.8667,\
   0.53125 0.8353 0.8588 0.9020,\
   0.5625  0.8000 0.8510 0.9333,\
   0.59375 0.7608 0.8353 0.9569,\
   0.625   0.7216 0.8157 0.9765,\
   0.65625 0.6824 0.7882 0.9922,\
   0.6875  0.6392 0.7608 1.0000,\
   0.71875 0.5961 0.7255 1.0000,\
   0.75    0.5529 0.6902 0.9961,\
   0.78125 0.5098 0.6471 0.9843,\
   0.8125  0.4667 0.6039 0.9686,\
   0.84375 0.4235 0.5569 0.9451,\
   0.875   0.3843 0.5098 0.9176,\
   0.90625 0.3412 0.4588 0.8824,\
   0.9375  0.3020 0.4078 0.8431,\
   0.96875 0.2667 0.3529 0.8000,\
   1.000   0.2314 0.2980 0.7529\
)
EOFMarker
}
print_viridis_palette(){
cat <<EOFMarker
set palette defined(\
   1   0.268510 0.009605 0.335427,\
   2   0.269944 0.014625 0.341379,\
   3   0.271305 0.019942 0.347269,\
   4   0.272594 0.025563 0.353093,\
   5   0.273809 0.031497 0.358853,\
   6   0.274952 0.037752 0.364543,\
   7   0.276022 0.044167 0.370164,\
   8   0.277018 0.050344 0.375715,\
   9   0.277941 0.056324 0.381191,\
   10  0.278791 0.062145 0.386592,\
   11  0.279566 0.067836 0.391917,\
   12  0.280267 0.073417 0.397163,\
   13  0.280894 0.078907 0.402329,\
   14  0.281446 0.084320 0.407414,\
   15  0.281924 0.089666 0.412415,\
   16  0.282327 0.094955 0.417331,\
   17  0.282656 0.100196 0.422160,\
   18  0.282910 0.105393 0.426902,\
   19  0.283091 0.110553 0.431554,\
   20  0.283197 0.115680 0.436115,\
   21  0.283229 0.120777 0.440584,\
   22  0.283187 0.125848 0.444960,\
   23  0.283072 0.130895 0.449241,\
   24  0.282884 0.135920 0.453427,\
   25  0.282623 0.140926 0.457517,\
   26  0.282290 0.145912 0.461510,\
   27  0.281887 0.150881 0.465405,\
   28  0.281412 0.155834 0.469201,\
   29  0.280868 0.160771 0.472899,\
   30  0.280255 0.165693 0.476498,\
   31  0.279574 0.170599 0.479997,\
   32  0.278826 0.175490 0.483397,\
   33  0.278012 0.180367 0.486697,\
   34  0.277134 0.185228 0.489898,\
   35  0.276194 0.190074 0.493001,\
   36  0.275191 0.194905 0.496005,\
   37  0.274128 0.199721 0.498911,\
   38  0.273006 0.204520 0.501721,\
   39  0.271828 0.209303 0.504434,\
   40  0.270595 0.214069 0.507052,\
   41  0.269308 0.218818 0.509577,\
   42  0.267968 0.223549 0.512008,\
   43  0.266580 0.228262 0.514349,\
   44  0.265145 0.232956 0.516599,\
   45  0.263663 0.237631 0.518762,\
   46  0.262138 0.242286 0.520837,\
   47  0.260571 0.246922 0.522828,\
   48  0.258965 0.251537 0.524736,\
   49  0.257322 0.256130 0.526563,\
   50  0.255645 0.260703 0.528312,\
   51  0.253935 0.265254 0.529983,\
   52  0.252194 0.269783 0.531579,\
   53  0.250425 0.274290 0.533103,\
   54  0.248629 0.278775 0.534556,\
   55  0.246811 0.283237 0.535941,\
   56  0.244972 0.287675 0.537260,\
   57  0.243113 0.292092 0.538516,\
   58  0.241237 0.296485 0.539709,\
   59  0.239346 0.300855 0.540844,\
   60  0.237441 0.305202 0.541921,\
   61  0.235526 0.309527 0.542944,\
   62  0.233603 0.313828 0.543914,\
   63  0.231674 0.318106 0.544834,\
   64  0.229739 0.322361 0.545706,\
   65  0.227802 0.326594 0.546532,\
   66  0.225863 0.330805 0.547314,\
   67  0.223925 0.334994 0.548053,\
   68  0.221989 0.339161 0.548752,\
   69  0.220057 0.343307 0.549413,\
   70  0.218130 0.347432 0.550038,\
   71  0.216210 0.351535 0.550627,\
   72  0.214298 0.355619 0.551184,\
   73  0.212395 0.359683 0.551710,\
   74  0.210503 0.363727 0.552206,\
   75  0.208623 0.367752 0.552675,\
   76  0.206756 0.371758 0.553117,\
   77  0.204903 0.375746 0.553533,\
   78  0.203063 0.379716 0.553925,\
   79  0.201239 0.383670 0.554294,\
   80  0.199430 0.387607 0.554642,\
   81  0.197636 0.391528 0.554969,\
   82  0.195860 0.395433 0.555276,\
   83  0.194100 0.399323 0.555565,\
   84  0.192357 0.403199 0.555836,\
   85  0.190631 0.407061 0.556089,\
   86  0.188923 0.410910 0.556326,\
   87  0.187231 0.414746 0.556547,\
   88  0.185556 0.418570 0.556753,\
   89  0.183898 0.422383 0.556944,\
   90  0.182256 0.426184 0.557120,\
   91  0.180629 0.429975 0.557282,\
   92  0.179019 0.433756 0.557430,\
   93  0.177423 0.437527 0.557565,\
   94  0.175841 0.441290 0.557685,\
   95  0.174274 0.445044 0.557792,\
   96  0.172719 0.448791 0.557885,\
   97  0.171176 0.452530 0.557965,\
   98  0.169646 0.456262 0.558030,\
   99  0.168126 0.459988 0.558082,\
   100 0.166617 0.463708 0.558119,\
   101 0.165117 0.467423 0.558141,\
   102 0.163625 0.471133 0.558148,\
   103 0.162142 0.474838 0.558140,\
   104 0.160665 0.478540 0.558115,\
   105 0.159194 0.482237 0.558073,\
   106 0.157729 0.485932 0.558013,\
   107 0.156270 0.489624 0.557936,\
   108 0.154815 0.493313 0.557840,\
   109 0.153364 0.497000 0.557724,\
   110 0.151918 0.500685 0.557587,\
   111 0.150476 0.504369 0.557430,\
   112 0.149039 0.508051 0.557250,\
   113 0.147607 0.511733 0.557049,\
   114 0.146180 0.515413 0.556823,\
   115 0.144759 0.519093 0.556572,\
   116 0.143343 0.522773 0.556295,\
   117 0.141935 0.526453 0.555991,\
   118 0.140536 0.530132 0.555659,\
   119 0.139147 0.533812 0.555298,\
   120 0.137770 0.537492 0.554906,\
   121 0.136408 0.541173 0.554483,\
   122 0.135066 0.544853 0.554029,\
   123 0.133743 0.548535 0.553541,\
   124 0.132444 0.552216 0.553018,\
   125 0.131172 0.555899 0.552459,\
   126 0.129933 0.559582 0.551864,\
   127 0.128729 0.563265 0.551229,\
   128 0.127568 0.566949 0.550556,\
   129 0.126453 0.570633 0.549841,\
   130 0.125394 0.574318 0.549086,\
   131 0.124395 0.578002 0.548287,\
   132 0.123463 0.581687 0.547445,\
   133 0.122606 0.585371 0.546557,\
   134 0.121831 0.589055 0.545623,\
   135 0.121148 0.592739 0.544641,\
   136 0.120565 0.596422 0.543611,\
   137 0.120092 0.600104 0.542530,\
   138 0.119738 0.603785 0.541400,\
   139 0.119512 0.607464 0.540218,\
   140 0.119423 0.611141 0.538982,\
   141 0.119483 0.614817 0.537692,\
   142 0.119699 0.618490 0.536347,\
   143 0.120081 0.622161 0.534946,\
   144 0.120638 0.625828 0.533488,\
   145 0.121380 0.629492 0.531973,\
   146 0.122312 0.633153 0.530398,\
   147 0.123444 0.636809 0.528763,\
   148 0.124780 0.640461 0.527068,\
   149 0.126326 0.644107 0.525311,\
   150 0.128087 0.647749 0.523491,\
   151 0.130067 0.651384 0.521608,\
   152 0.132268 0.655014 0.519661,\
   153 0.134692 0.658636 0.517649,\
   154 0.137339 0.662252 0.515571,\
   155 0.140210 0.665859 0.513427,\
   156 0.143303 0.669459 0.511215,\
   157 0.146616 0.673050 0.508936,\
   158 0.150148 0.676631 0.506589,\
   159 0.153894 0.680203 0.504172,\
   160 0.157851 0.683765 0.501686,\
   161 0.162016 0.687316 0.499129,\
   162 0.166383 0.690856 0.496502,\
   163 0.170948 0.694384 0.493803,\
   164 0.175707 0.697900 0.491033,\
   165 0.180653 0.701402 0.488189,\
   166 0.185783 0.704891 0.485273,\
   167 0.191090 0.708366 0.482284,\
   168 0.196571 0.711827 0.479221,\
   169 0.202219 0.715272 0.476084,\
   170 0.208030 0.718701 0.472873,\
   171 0.214000 0.722114 0.469588,\
   172 0.220124 0.725509 0.466226,\
   173 0.226397 0.728888 0.462789,\
   174 0.232815 0.732247 0.459277,\
   175 0.239374 0.735588 0.455688,\
   176 0.246070 0.738910 0.452024,\
   177 0.252899 0.742211 0.448284,\
   178 0.259857 0.745492 0.444467,\
   179 0.266941 0.748751 0.440573,\
   180 0.274149 0.751988 0.436601,\
   181 0.281477 0.755203 0.432552,\
   182 0.288921 0.758394 0.428426,\
   183 0.296479 0.761561 0.424223,\
   184 0.304148 0.764704 0.419943,\
   185 0.311925 0.767822 0.415586,\
   186 0.319809 0.770914 0.411152,\
   187 0.327796 0.773980 0.406640,\
   188 0.335885 0.777018 0.402049,\
   189 0.344074 0.780029 0.397381,\
   190 0.352360 0.783011 0.392636,\
   191 0.360741 0.785964 0.387814,\
   192 0.369214 0.788888 0.382914,\
   193 0.377779 0.791781 0.377939,\
   194 0.386433 0.794644 0.372886,\
   195 0.395174 0.797475 0.367757,\
   196 0.404001 0.800275 0.362552,\
   197 0.412913 0.803041 0.357269,\
   198 0.421908 0.805774 0.351910,\
   199 0.430983 0.808473 0.346476,\
   200 0.440137 0.811138 0.340967,\
   201 0.449368 0.813768 0.335384,\
   202 0.458674 0.816363 0.329727,\
   203 0.468053 0.818921 0.323998,\
   204 0.477504 0.821444 0.318195,\
   205 0.487026 0.823929 0.312321,\
   206 0.496615 0.826376 0.306377,\
   207 0.506271 0.828786 0.300362,\
   208 0.515992 0.831158 0.294279,\
   209 0.525776 0.833491 0.288127,\
   210 0.535621 0.835785 0.281908,\
   211 0.545524 0.838039 0.275626,\
   212 0.555484 0.840254 0.269281,\
   213 0.565498 0.842430 0.262877,\
   214 0.575563 0.844566 0.256415,\
   215 0.585678 0.846661 0.249897,\
   216 0.595839 0.848717 0.243329,\
   217 0.606045 0.850733 0.236712,\
   218 0.616293 0.852709 0.230052,\
   219 0.626579 0.854645 0.223353,\
   220 0.636902 0.856542 0.216620,\
   221 0.647257 0.858400 0.209861,\
   222 0.657642 0.860219 0.203082,\
   223 0.668054 0.861999 0.196293,\
   224 0.678489 0.863742 0.189503,\
   225 0.688944 0.865448 0.182725,\
   226 0.699415 0.867117 0.175971,\
   227 0.709898 0.868751 0.169257,\
   228 0.720391 0.870350 0.162603,\
   229 0.730889 0.871916 0.156029,\
   230 0.741388 0.873449 0.149561,\
   231 0.751884 0.874951 0.143228,\
   232 0.762373 0.876424 0.137064,\
   233 0.772852 0.877868 0.131109,\
   234 0.783315 0.879285 0.125405,\
   235 0.793760 0.880678 0.120005,\
   236 0.804182 0.882046 0.114965,\
   237 0.814576 0.883393 0.110347,\
   238 0.824940 0.884720 0.106217,\
   239 0.835270 0.886029 0.102646,\
   240 0.845561 0.887322 0.099702,\
   241 0.855810 0.888601 0.097452,\
   242 0.866013 0.889868 0.095953,\
   243 0.876168 0.891125 0.095250,\
   244 0.886271 0.892374 0.095374,\
   245 0.896320 0.893616 0.096335,\
   246 0.906311 0.894855 0.098125,\
   247 0.916242 0.896091 0.100717,\
   248 0.926106 0.897330 0.104071,\
   249 0.935904 0.898570 0.108131,\
   250 0.945636 0.899815 0.112838,\
   251 0.955300 0.901065 0.118128,\
   252 0.964894 0.902323 0.123941,\
   253 0.974417 0.903590 0.130215,\
   254 0.983868 0.904867 0.136897,\
   255 0.993248 0.906157 0.143936)
EOFMarker
}
#rdbu palette
print_rdbu_palette(){
cat <<EOFMarker
set palette defined (\
   0 '#B2182B',\
   1 '#D6604D',\
   2 '#F4A582',\
   3 '#FDDBC7',\
   4 '#D1E5F0',\
   5 '#92C5DE',\
   6 '#4393C3',\
   7 '#2166AC' )
EOFMarker
}
print_magma_palette(){
cat <<EOFMarker
set palette defined (\
   0   0.001462 0.000466 0.013866,\
   1   0.002258 0.001295 0.018331,\
   2   0.003279 0.002305 0.023708,\
   3   0.004512 0.003490 0.029965,\
   4   0.005950 0.004843 0.037130,\
   5   0.007588 0.006356 0.044973,\
   6   0.009426 0.008022 0.052844,\
   7   0.011465 0.009828 0.060750,\
   8   0.013708 0.011771 0.068667,\
   9   0.016156 0.013840 0.076603,\
   10  0.018815 0.016026 0.084584,\
   11  0.021692 0.018320 0.092610,\
   12  0.024792 0.020715 0.100676,\
   13  0.028123 0.023201 0.108787,\
   14  0.031696 0.025765 0.116965,\
   15  0.035520 0.028397 0.125209,\
   16  0.039608 0.031090 0.133515,\
   17  0.043830 0.033830 0.141886,\
   18  0.048062 0.036607 0.150327,\
   19  0.052320 0.039407 0.158841,\
   20  0.056615 0.042160 0.167446,\
   21  0.060949 0.044794 0.176129,\
   22  0.065330 0.047318 0.184892,\
   23  0.069764 0.049726 0.193735,\
   24  0.074257 0.052017 0.202660,\
   25  0.078815 0.054184 0.211667,\
   26  0.083446 0.056225 0.220755,\
   27  0.088155 0.058133 0.229922,\
   28  0.092949 0.059904 0.239164,\
   29  0.097833 0.061531 0.248477,\
   30  0.102815 0.063010 0.257854,\
   31  0.107899 0.064335 0.267289,\
   32  0.113094 0.065492 0.276784,\
   33  0.118405 0.066479 0.286321,\
   34  0.123833 0.067295 0.295879,\
   35  0.129380 0.067935 0.305443,\
   36  0.135053 0.068391 0.315000,\
   37  0.140858 0.068654 0.324538,\
   38  0.146785 0.068738 0.334011,\
   39  0.152839 0.068637 0.343404,\
   40  0.159018 0.068354 0.352688,\
   41  0.165308 0.067911 0.361816,\
   42  0.171713 0.067305 0.370771,\
   43  0.178212 0.066576 0.379497,\
   44  0.184801 0.065732 0.387973,\
   45  0.191460 0.064818 0.396152,\
   46  0.198177 0.063862 0.404009,\
   47  0.204935 0.062907 0.411514,\
   48  0.211718 0.061992 0.418647,\
   49  0.218512 0.061158 0.425392,\
   50  0.225302 0.060445 0.431742,\
   51  0.232077 0.059889 0.437695,\
   52  0.238826 0.059517 0.443256,\
   53  0.245543 0.059352 0.448436,\
   54  0.252220 0.059415 0.453248,\
   55  0.258857 0.059706 0.457710,\
   56  0.265447 0.060237 0.461840,\
   57  0.271994 0.060994 0.465660,\
   58  0.278493 0.061978 0.469190,\
   59  0.284951 0.063168 0.472451,\
   60  0.291366 0.064553 0.475462,\
   61  0.297740 0.066117 0.478243,\
   62  0.304081 0.067835 0.480812,\
   63  0.310382 0.069702 0.483186,\
   64  0.316654 0.071690 0.485380,\
   65  0.322899 0.073782 0.487408,\
   66  0.329114 0.075972 0.489287,\
   67  0.335308 0.078236 0.491024,\
   68  0.341482 0.080564 0.492631,\
   69  0.347636 0.082946 0.494121,\
   70  0.353773 0.085373 0.495501,\
   71  0.359898 0.087831 0.496778,\
   72  0.366012 0.090314 0.497960,\
   73  0.372116 0.092816 0.499053,\
   74  0.378211 0.095332 0.500067,\
   75  0.384299 0.097855 0.501002,\
   76  0.390384 0.100379 0.501864,\
   77  0.396467 0.102902 0.502658,\
   78  0.402548 0.105420 0.503386,\
   79  0.408629 0.107930 0.504052,\
   80  0.414709 0.110431 0.504662,\
   81  0.420791 0.112920 0.505215,\
   82  0.426877 0.115395 0.505714,\
   83  0.432967 0.117855 0.506160,\
   84  0.439062 0.120298 0.506555,\
   85  0.445163 0.122724 0.506901,\
   86  0.451271 0.125132 0.507198,\
   87  0.457386 0.127522 0.507448,\
   88  0.463508 0.129893 0.507652,\
   89  0.469640 0.132245 0.507809,\
   90  0.475780 0.134577 0.507921,\
   91  0.481929 0.136891 0.507989,\
   92  0.488088 0.139186 0.508011,\
   93  0.494258 0.141462 0.507988,\
   94  0.500438 0.143719 0.507920,\
   95  0.506629 0.145958 0.507806,\
   96  0.512831 0.148179 0.507648,\
   97  0.519045 0.150383 0.507443,\
   98  0.525270 0.152569 0.507192,\
   99  0.531507 0.154739 0.506895,\
   100 0.537755 0.156894 0.506551,\
   101 0.544015 0.159033 0.506159,\
   102 0.550287 0.161158 0.505719,\
   103 0.556571 0.163269 0.505230,\
   104 0.562866 0.165368 0.504692,\
   105 0.569172 0.167454 0.504105,\
   106 0.575490 0.169530 0.503466,\
   107 0.581819 0.171596 0.502777,\
   108 0.588158 0.173652 0.502035,\
   109 0.594508 0.175701 0.501241,\
   110 0.600868 0.177743 0.500394,\
   111 0.607238 0.179779 0.499492,\
   112 0.613617 0.181811 0.498536,\
   113 0.620005 0.183840 0.497524,\
   114 0.626401 0.185867 0.496456,\
   115 0.632805 0.187893 0.495332,\
   116 0.639216 0.189921 0.494150,\
   117 0.645633 0.191952 0.492910,\
   118 0.652056 0.193986 0.491611,\
   119 0.658483 0.196027 0.490253,\
   120 0.664915 0.198075 0.488836,\
   121 0.671349 0.200133 0.487358,\
   122 0.677786 0.202203 0.485819,\
   123 0.684224 0.204286 0.484219,\
   124 0.690661 0.206384 0.482558,\
   125 0.697098 0.208501 0.480835,\
   126 0.703532 0.210638 0.479049,\
   127 0.709962 0.212797 0.477201,\
   128 0.716387 0.214982 0.475290,\
   129 0.722805 0.217194 0.473316,\
   130 0.729216 0.219437 0.471279,\
   131 0.735616 0.221713 0.469180,\
   132 0.742004 0.224025 0.467018,\
   133 0.748378 0.226377 0.464794,\
   134 0.754737 0.228772 0.462509,\
   135 0.761077 0.231214 0.460162,\
   136 0.767398 0.233705 0.457755,\
   137 0.773695 0.236249 0.455289,\
   138 0.779968 0.238851 0.452765,\
   139 0.786212 0.241514 0.450184,\
   140 0.792427 0.244242 0.447543,\
   141 0.798608 0.247040 0.444848,\
   142 0.804752 0.249911 0.442102,\
   143 0.810855 0.252861 0.439305,\
   144 0.816914 0.255895 0.436461,\
   145 0.822926 0.259016 0.433573,\
   146 0.828886 0.262229 0.430644,\
   147 0.834791 0.265540 0.427671,\
   148 0.840636 0.268953 0.424666,\
   149 0.846416 0.272473 0.421631,\
   150 0.852126 0.276106 0.418573,\
   151 0.857763 0.279857 0.415496,\
   152 0.863320 0.283729 0.412403,\
   153 0.868793 0.287728 0.409303,\
   154 0.874176 0.291859 0.406205,\
   155 0.879464 0.296125 0.403118,\
   156 0.884651 0.300530 0.400047,\
   157 0.889731 0.305079 0.397002,\
   158 0.894700 0.309773 0.393995,\
   159 0.899552 0.314616 0.391037,\
   160 0.904281 0.319610 0.388137,\
   161 0.908884 0.324755 0.385308,\
   162 0.913354 0.330052 0.382563,\
   163 0.917689 0.335500 0.379915,\
   164 0.921884 0.341098 0.377376,\
   165 0.925937 0.346844 0.374959,\
   166 0.929845 0.352734 0.372677,\
   167 0.933606 0.358764 0.370541,\
   168 0.937221 0.364929 0.368567,\
   169 0.940687 0.371224 0.366762,\
   170 0.944006 0.377643 0.365136,\
   171 0.947180 0.384178 0.363701,\
   172 0.950210 0.390820 0.362468,\
   173 0.953099 0.397563 0.361438,\
   174 0.955849 0.404400 0.360619,\
   175 0.958464 0.411324 0.360014,\
   176 0.960949 0.418323 0.359630,\
   177 0.963310 0.425390 0.359469,\
   178 0.965549 0.432519 0.359529,\
   179 0.967671 0.439703 0.359810,\
   180 0.969680 0.446936 0.360311,\
   181 0.971582 0.454210 0.361030,\
   182 0.973381 0.461520 0.361965,\
   183 0.975082 0.468861 0.363111,\
   184 0.976690 0.476226 0.364466,\
   185 0.978210 0.483612 0.366025,\
   186 0.979645 0.491014 0.367783,\
   187 0.981000 0.498428 0.369734,\
   188 0.982279 0.505851 0.371874,\
   189 0.983485 0.513280 0.374198,\
   190 0.984622 0.520713 0.376698,\
   191 0.985693 0.528148 0.379371,\
   192 0.986700 0.535582 0.382210,\
   193 0.987646 0.543015 0.385210,\
   194 0.988533 0.550446 0.388365,\
   195 0.989363 0.557873 0.391671,\
   196 0.990138 0.565296 0.395122,\
   197 0.990871 0.572706 0.398714,\
   198 0.991558 0.580107 0.402441,\
   199 0.992196 0.587502 0.406299,\
   200 0.992785 0.594891 0.410283,\
   201 0.993326 0.602275 0.414390,\
   202 0.993834 0.609644 0.418613,\
   203 0.994309 0.616999 0.422950,\
   204 0.994738 0.624350 0.427397,\
   205 0.995122 0.631696 0.431951,\
   206 0.995480 0.639027 0.436607,\
   207 0.995810 0.646344 0.441361,\
   208 0.996096 0.653659 0.446213,\
   209 0.996341 0.660969 0.451160,\
   210 0.996580 0.668256 0.456192,\
   211 0.996775 0.675541 0.461314,\
   212 0.996925 0.682828 0.466526,\
   213 0.997077 0.690088 0.471811,\
   214 0.997186 0.697349 0.477182,\
   215 0.997254 0.704611 0.482635,\
   216 0.997325 0.711848 0.488154,\
   217 0.997351 0.719089 0.493755,\
   218 0.997351 0.726324 0.499428,\
   219 0.997341 0.733545 0.505167,\
   220 0.997285 0.740772 0.510983,\
   221 0.997228 0.747981 0.516859,\
   222 0.997138 0.755190 0.522806,\
   223 0.997019 0.762398 0.528821,\
   224 0.996898 0.769591 0.534892,\
   225 0.996727 0.776795 0.541039,\
   226 0.996571 0.783977 0.547233,\
   227 0.996369 0.791167 0.553499,\
   228 0.996162 0.798348 0.559820,\
   229 0.995932 0.805527 0.566202,\
   230 0.995680 0.812706 0.572645,\
   231 0.995424 0.819875 0.579140,\
   232 0.995131 0.827052 0.585701,\
   233 0.994851 0.834213 0.592307,\
   234 0.994524 0.841387 0.598983,\
   235 0.994222 0.848540 0.605696,\
   236 0.993866 0.855711 0.612482,\
   237 0.993545 0.862859 0.619299,\
   238 0.993170 0.870024 0.626189,\
   239 0.992831 0.877168 0.633109,\
   240 0.992440 0.884330 0.640099,\
   241 0.992089 0.891470 0.647116,\
   242 0.991688 0.898627 0.654202,\
   243 0.991332 0.905763 0.661309,\
   244 0.990930 0.912915 0.668481,\
   245 0.990570 0.920049 0.675675,\
   246 0.990175 0.927196 0.682926,\
   247 0.989815 0.934329 0.690198,\
   248 0.989434 0.941470 0.697519,\
   249 0.989077 0.948604 0.704863,\
   250 0.988717 0.955742 0.712242,\
   251 0.988367 0.962878 0.719649,\
   252 0.988033 0.970012 0.727077,\
   253 0.987691 0.977154 0.734536,\
   254 0.987387 0.984288 0.742002,\
   255 0.987053 0.991438 0.749504)
EOFMarker
}
print_oranges_palette(){
cat <<EOFMarker
set palette defined (\
   0 '#FFF5EB',\
   1 '#FEE6CE',\
   2 '#FDD0A2',\
   3 '#FDAE6B',\
   4 '#FD8D3C',\
   5 '#F16913',\
   6 '#D94801',\
   7 '#8C2D04' )
EOFMarker
}
#Selects a palette and prints it to the stdout
print_palette() {
   the_palette="$1"
   if [ "$the_palette" == "defgnp" ];then
      echo "set palette rgbformulae 33,13,10"
   elif [ "$the_palette" == "magma" ];then
      print_magma_palette
   elif [ "$the_palette" == "oranges" ];then
      print_oranges_palette
   elif [ "$the_palette" == "rdbu" ];then
      print_rdbu_palette
   elif [ "$the_palette" == "viridis" ];then
      print_viridis_palette
   elif [ "$the_palette" == "invkmortemp" ];then
      print_invkmortemp_palette
   elif [ "$the_palette" == "kmortemp" ];then
      print_kmoreland_palette
   else
      #echo "The palette '$the_palette' is invalid!"
      #echo "Using default palette"
      echo "set palette rgbformulae 33,13,10"
   fi
}
#Echoes terminal specific options for gnuplot
print_term_specific_conf(){
   lcl_datname="$1"
   the_terminal="$2"
   lcl_xlabel="{/Symbol L}_2"
   if [ "$the_terminal" == "pngcairo" ];then
      lcl_outputname="${lcl_datname%dat}png"
      terminal_string="term pngcairo enhanced interlace size 1200,900 linewidth 2 fontscale 1.5"
   elif [ "$the_terminal" == "png" ];then
      lcl_outputname="${lcl_datname%dat}png"
      terminal_string="term png enhanced interlace size 1200,900 linewidth 2 fontscale 1.5"
      lcl_xlabel="Lambda_2"
   elif [ "$the_terminal" == "jpg" ];then
      lcl_outputname="${lcl_datname%dat}jpg"
      terminal_string="term jpeg enhanced interlace size 1200,900 linewidth 2 fontscale 1.5"
      lcl_xlabel="Lambda_2"
   elif [ "$the_terminal" == "pdf" ];then
      lcl_outputname="|epstopdf --filter --outfile=${lcl_datname%dat}pdf"
      terminal_string="term postscript eps enhanced color linewidth 2 fontscale 1.5"
   fi
   echo "set encoding utf8"
   echo "set xlabel '$lcl_xlabel' offset character 0,0.75"
   echo "set ylabel 's' offset character 2,0"
   echo "set $terminal_string"
   echo "set output '$lcl_outputname'"
   echo "plot '$lcl_datname' u 1:2:1 w p pt 7 ps 0.25 palette title 'NCI'"
}
#Makes a plot using gnuplot
make_plot(){
   dat_file_name=$1
   gnp_file_name=${dat_file_name%dat}gnp
   png_file_name=${dat_file_name%dat}png
   cat > $gnp_file_name <<-EOFMarker
set xrange [-0.2:0.2]
set yrange [0.0:2.0]
set cbrange [-0.2:0.2]
set xtics 0.05
set ytics 0.2
set mxtics 5
set mytics 2
set grid ytics mytics
set grid xtics mxtics
set tmargin at screen 0.95
set bmargin at screen 0.13
set lmargin at screen 0.10
set rmargin at screen 0.84
EOFMarker
print_palette $myPalette >> $gnp_file_name
print_term_specific_conf $dat_file_name $gnuplotTerminal >> $gnp_file_name
gnuplot $gnp_file_name
}
#Makes a plot of GrdRedRho vs Rho
plot_redgradrho_vs_rho() {
   data_cube_RedDensGrad="$1"
   data_cube_Rho="$2"
   data_plot_NCI="${3}NCISvsRho.dat"
   tmp_dat_rho_file=${RANDOM}${RANDOM}
   tmp_dat_s_file=${RANDOM}${RANDOM}
   cube_to_column $data_cube_Rho > $tmp_dat_rho_file
   cube_to_column $data_cube_RedDensGrad > $tmp_dat_s_file
   paste $tmp_dat_s_file $tmp_dat_rho_file > $data_plot_NCI 
   rm $tmp_dat_rho_file; rm $tmp_dat_s_file
   make_plot $data_plot_NCI
}

if [ $# -lt 1 ]
then
   echo -e "\033[1m\033[31mError:\033[0m Invalid syntax! (Try $thisScriptName -h for more information.)."
   exit 2
fi

cubeArgsString=""
# Default values for limits of cubes to be will compute
rhoMin="0.0005"
rhoMax="0.2"
redDensGradMax="2.0"
quietVMDRendering=false
askCubeComputation=true
gnuplotTerminal="pngcairo"
myPalette="defgnp"
while getopts ":hw:l:Ln:Pr:R:sS:t:G:c:q" opt; do
  case $opt in
    h)
      usage $0
      exit 0
      ;;
    w)
      wavefunctionFileName="$OPTARG"
      ;;
    c)
      cubeArgsString="$cubeArgsString -c $OPTARG"
      ;;
    l)
      myPalette="$OPTARG"
      ;;
    L)
      cubeArgsString="$cubeArgsString -l"
      ;;
    n)
      cubeArgsString="$cubeArgsString -n $OPTARG"
      ;;
    P)
      askCubeComputation=false
      ;;
    r)
      rhoMin="$OPTARG"
      ;;
    R)
      rhoMax="$OPTARG"
      ;;
    s)
       cubeArgsString="$cubeArgsString -s"
      ;;
    S)
      cubeArgsString="$cubeArgsString -S $OPTARG"
      ;;
    t)
      gnuplotTerminal="$OPTARG"
      ;;
    G)
      redDensGradMax="$OPTARG"
      ;;
    q)
      quietVMDRendering=true
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      echo -e "(Try\n   $thisScriptName -h\nfor more information.)"
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

if [ -z "$wavefunctionFileName" ]
then
   echo -e "\033[1m\033[31mError:\033[0m Wavefuntion file name missing" 
   echo -e "\tTry \n\t\t$thisScriptName -h\n\tfor more information."
   exit 2
fi

cutoffArgString="--configure-nci $rhoMin $rhoMax $redDensGradMax"

#This final extension was acquired from scr/common/fldtypesdef.h file of the function getFieldTypeKeyShort
baseFileName=${wavefunctionFileName%.wf?}
cubeRedGradFileName="${baseFileName}NCIRedDensGrad.cub"
cubeRhoFileName="${baseFileName}NCILambda2.cub"

#Checks whether cubes are present.
if [ "$askCubeComputation" = true ]; then
   if [ -f "$cubeRedGradFileName" -a -f "$cubeRhoFileName" ]; then
      echo -e "The needed cube files are already present ($cubeRedGradFileName and $cubeRhoFileName)"
      echo "Do you wish to compute them again?"
      select answer in "Yes=1" "No=2"
      do
         case $answer in
            Yes=1 )
               compute_cubes "$wavefunctionFileName" "$cubeArgsString" "$cutoffArgString"
               break;;
            No=2 )
               echo -e "Skipping cube calculation...\n"
               break;;
         esac
      done
   else
      compute_cubes "$wavefunctionFileName" "$cubeArgsString" "$cutoffArgString"
   fi
fi
#
#Names of VMD script files
#outputVMDFileName="${baseFileName}NCI.vmd"
#outputTGAFileName="${baseFileName}NCI.tga"
#Asks and saves the current directory (VMD sometimes needs absolute paths)
currentWD=$(pwd)
#
#Makes the VMD scripts.
#echo -e "Making VMD scripts..."
#print_vmd_script "$cubeRhoFileName" "$cubeRedGradFileName" 0.500000 0.050000 "$outputTGAFileName" > "$outputVMDFileName"
#if [ "$quietVMDRendering" = true ]; then
#   echo "quit" >> "$outputVMDFileName"
#fi

echo -e "Making s vs rho plot..."
plot_redgradrho_vs_rho "$currentWD/$cubeRhoFileName" "$currentWD/$cubeRedGradFileName" "$currentWD/$baseFileName"

