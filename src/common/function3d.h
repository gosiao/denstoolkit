#ifndef _FUNCTION3D_H_
#define _FUNCTION3D_H_
#include <vector>
using std::vector;

/* ************************************************************************** */
/* ************************************************************************** */
class Function3D {
/* ************************************************************************** */
public:
/* ************************************************************************** */
   Function3D();
   virtual double f(const vector<double> &x) {return testF1(x);}
   double testF1(const vector<double> &x);
   double analytF1Res();
/* ************************************************************************** */
protected:
/* ************************************************************************** */
   vector<double> x1,x2;
/* ************************************************************************** */
};
/* ************************************************************************** */
/* ************************************************************************** */

#endif  /* _FUNCTION3D_H_ */

